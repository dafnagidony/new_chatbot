var module = require('../..');
var test = require('tape');
var fakeredis = require('fakeredis');


test('TestHelper', {skip: false}, function(t) {
  var storeOptions;
  var store;

  function setupStore(tt) {
    tt.test('Setup store', function storeInstanceCreate(ttt) {
      var client = fakeredis.createClient();
      ttt.plan(1);
      storeOptions = {
        client: client
      };
      module.store.connectToStore(storeOptions).then(function(_store) {
        store = _store;
        return ttt.equal(_store.client.connected, true, 'connect');
      }).catch(function(err) {
        throw err;
      });
    });
  }

  setupStore(t);

  t.test('should export testHelpers.cleanRedis', function(tt) {
    tt.ok(typeof module.testHelper.cleanRedis, 'function');

    tt.test('create key value', function(ttt) {
      store.client.set('123', 'abc', function(err, repl) {
        if (err) {
          ttt.fail();
        }
        ttt.equal(repl, 'OK', 'set data');
        ttt.end();
      });
    });

    tt.test('verify data', function(ttt) {
      store.client.get('123', function(err, repl) {
        if (err) {
          ttt.fail();
        }
        ttt.equal(repl, 'abc', 'exists');
        ttt.end();
      });
    });

    tt.test('throws type error', function(ttt) {
      ttt.throws(function() {
        module.testHelper.cleanRedis({}, false, function() {});
      }, TypeError, 'throws type error for store');
      ttt.throws(function() {
        module.testHelper.cleanRedis(store, false);
      }, TypeError, 'throws type error for prefix');
      ttt.end();
    });

    tt.test('cleanRedis', function(ttt) {
      module.testHelper.cleanRedis(store, '*', function() {
        store.client.get('123', function(err, repl) {
          if (err) {
            ttt.fail();
          }
          ttt.equal(repl, null, 'data cleaned');
          ttt.end();
        });
      });
    });
  });
});
