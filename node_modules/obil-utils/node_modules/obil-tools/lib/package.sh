#!/bin/bash

# PROJECT_NAME defaults to the name of root folder
PROJECT_NAME=$(basename $PWD)

# BUILD_DIR name of directory where package lands
BUILD_DIR="out"

# PACKAGE_VERSION extracting version from package.json
PACKAGE_VERSION=$(cat package.json \
  | grep version \
  | head -1 \
  | awk -F: '{ print $2 }' \
  | sed 's/[", ]//g' )

# ARTIFACT name of package archive
ARTIFACT="$PROJECT_NAME"

# PROJECT_NAME_VERSIONED name with package archive with version
if !([ -z "${PACKAGE_VERSION// }" ]); then
    PROJECT_NAME_VERSIONED="${PROJECT_NAME}-${PACKAGE_VERSION}"
    ARTIFACT_VERSIONED="${PROJECT_NAME_VERSIONED}"
fi

# Removing old packages
if [ -f "$BUILD_DIR/${ARTIFACT}.tgz" ]; then
    rm "$BUILD_DIR/${ARTIFACT}.tgz"
fi
if [ -f "$BUILD_DIR/${ARTIFACT_VERSIONED}.tgz" ]; then
    rm "$BUILD_DIR/${ARTIFACT_VERSIONED}.tgz"
fi

# Creating build directory
if !([ -d "${BUILD_DIR}" ]); then
    mkdir ${BUILD_DIR}
fi

# Creating packages
cd ..
tar -cvzf "${PROJECT_NAME}/${BUILD_DIR}/${ARTIFACT}.tgz" --exclude 'node_modules' --exclude '.git*' --exclude ${BUILD_DIR} --exclude 'infra' --exclude 'bin' --exclude "${PROJECT_NAME}/Makefile" "${PROJECT_NAME}/."

if !([ -z "$PROJECT_NAME_VERSIONED" ]); then
    ln -s $PROJECT_NAME $PROJECT_NAME_VERSIONED
    tar -cvzf "${PROJECT_NAME}/${BUILD_DIR}/${ARTIFACT_VERSIONED}.tgz" --exclude 'node_modules' --exclude '.git*' --exclude ${BUILD_DIR} --exclude 'infra' --exclude 'bin' --exclude "$PROJECT_NAME_VERSIONED/Makefile" "${PROJECT_NAME_VERSIONED}/."
    rm $PROJECT_NAME_VERSIONED
fi
cd $PROJECT_NAME


