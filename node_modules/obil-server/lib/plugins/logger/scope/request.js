var utils = require('obil-utils');
var helpers = utils.helpers;
var onFinished = require('on-finished');
var onHeaders = require('on-headers');

/**
 * Record the start time.
 * @private
 */
function recordStartTime() {
  this._startAt = process.hrtime();
  this._startTime = new Date();
}

/**
 * Response time.
 * @private
 */
function responseTime(req, res) {
  var ms;
  if (!req._startAt || !res._startAt) {
    return undefined;
  }
  ms = (res._startAt[0] - req._startAt[0]) * 1e3
    + (res._startAt[1] - req._startAt[1]) * 1e-6;

  return ms.toFixed(3);
}

/**
 * format line log.
 * @private
 */
function formatLog(req, res) {
  var log = {};
  var status = res._header
        ? res.statusCode
        : undefined;
  var userId = (req.session && req.session.passport)
        ? req.session.passport.user
        : undefined;
  log.url = req.originalUrl || req.url;
  log.statusCode = status;
  log.userId = userId;
  log.method = req.method;
  log['response-time'] = responseTime(req, res);
  log['user-agent'] = req.headers['user-agent'];
  log['http-version'] = req.httpVersionMajor + '.' + req.httpVersionMinor;
  return log;
}

/**
 * createLogger
 *
 * Middleware inspired by morgan. Produces logs for HTTP requests.
 *
 * @param {Object} options
 * @returns {Function} middleware
 */
module.exports = function createLogger(/* options */) {
  var log = helpers.map().get('logger');
  return function magicLogger(req, res, next) {
    req._startAt = undefined;
    req._startTime = undefined;
    res._startAt = undefined;
    res._startTime = undefined;

    recordStartTime.call(req);

    function logRequest() {
      var line = formatLog(req, res);
      var logType = (line.statusCode) < 400 ? 'info' : 'error';

      log[logType]('Request log', line);
    }

    onHeaders(res, recordStartTime);
    onFinished(res, logRequest);

    next();
  };
};

