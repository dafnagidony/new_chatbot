var findParentDir = require('find-parent-dir');
var path = require('path');
var debug = require('../core').debug('obil.utils.helpers');

/**
 * Helpers
 */

/**
 * @method map A simple key/value map. Any value (both objects and primitive values) may be used as either a key or a value.
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map}
 * @returns {<Object>} Map
 */
exports.map = (function(_map) {
  return function map() {
    return _map;
  };
})(new Map());


/**
 * getFilePaths
 *
 * Provides paths to files (named as requested)
 * beginning search from (specified) location up
 * the FS tree (i.e. handy to find root of the project)
 *
 * @param {String} directory Location where search should start
 * @param {String} fileName Name of searched file
 * @param {Function} cb Callback
 * @returns {Array} Paths where spec. files are located
 */
exports.getFilePaths = (directory, fileName, cb) => {
  var results = [];
  var parent;

  var getPath = (dir) => {
    parent = path.resolve(dir, '..');
    if (parent === dir) {
      return cb(results);
    }
    return findParentDir(dir, fileName, (err, result) => {
      if (err) {
        debug.warn('problem finding parent directory', err);
      }
      if (result) {
        results.push(result);
        parent = path.resolve(result, '..');
      }
      return getPath(parent);
    });
  };

  return getPath(directory);
};
