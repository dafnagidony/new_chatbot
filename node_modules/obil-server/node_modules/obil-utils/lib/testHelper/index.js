var redis = require('redis');

/**
 * cleanRedis
 *
 * @desc Removes data in store under prefix
 * @param {Object} store Object with store.client being RedisClient instance
 * @param {String} prefix Key describing relevant namespace to operate in
 * @param {String} cb (optional) Callback
 */
exports.cleanRedis = function cleanRedis(store, prefix, cb) {
  if (!store || !(store.client instanceof redis.RedisClient)) {
    throw new TypeError('store.client has to be instance of redis.RedisClient');
  }

  if (typeof prefix !== 'string') {
    throw new TypeError('prefix has to be a string');
  }

  function complete() {
    if (typeof cb === 'function') {
      return cb();
    }
    return true;
  }

  store.client.keys(prefix, function(err, keys) {
    var len = keys.length;
    var k = 0;
    var deleteCallback;
    if (!keys || !len) {
      return complete();
    }
    deleteCallback = function() {
      k = k + 1;
      if (k === len) {
        return complete();
      }
      return false;
    };
    return keys.forEach(function removeData(key) {
      store.client.del(key, deleteCallback);
    });
  });
};

